import React from "react";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { ArrowLeft, Youtube, Star, Filter, Play, Users, Tag, Save, Lock, ListVideo, Share2, Bookmark } from "lucide-react";
import { Link } from "react-router-dom";
import { createPageUrl } from "@/utils";
import { useTranslation } from "../components/LanguageProvider";

export default function Tutorial() {
  const { t } = useTranslation();

  const tutorials = [
    {
      id: "adding-videos",
      titleKey: "tutorial_adding_videos_title",
      icon: <Youtube className="h-8 w-8 text-red-500" />,
      descriptionKey: "tutorial_adding_videos_desc",
      stepsKeys: [
        "tutorial_adding_videos_step1",
        "tutorial_adding_videos_step2",
        "tutorial_adding_videos_step3",
        "tutorial_adding_videos_step4",
        "tutorial_adding_videos_step5"
      ],
      image: "https://images.unsplash.com/photo-1611162618071-b39a2ec055fb?ixlib=rb-1.2.1&auto=format&fit=crop&w=1200&q=80"
    },
    {
      id: "organizing-videos",
      titleKey: "tutorial_organizing_title",
      icon: <Tag className="h-8 w-8 text-blue-500" />,
      descriptionKey: "tutorial_organizing_desc",
      stepsKeys: [
        "tutorial_organizing_step1",
        "tutorial_organizing_step2",
        "tutorial_organizing_step3",
        "tutorial_organizing_step4",
        "tutorial_organizing_step5"
      ],
      image: "https://images.unsplash.com/photo-1586769852044-692d6e3703f2?ixlib=rb-1.2.1&auto=format&fit=crop&w=1200&q=80"
    },
     {
      id: "playlists",
      titleKey: "tutorial_playlists_title",
      icon: <ListVideo className="h-8 w-8 text-green-500" />,
      descriptionKey: "tutorial_playlists_desc",
      stepsKeys: [
        "tutorial_playlists_step1",
        "tutorial_playlists_step2",
        "tutorial_playlists_step3",
        "tutorial_playlists_step4"
      ],
      image: "https://images.unsplash.com/photo-1516253593418- Miloš Durđević-9b1c1a2a7f4e?w=800&auto=format&fit=crop&q=60" // Placeholder for playlists
    },
    {
      id: "kids-mode",
      titleKey: "tutorial_kids_mode_title",
      icon: <Users className="h-8 w-8 text-purple-500" />,
      descriptionKey: "tutorial_kids_mode_desc",
      stepsKeys: [
        "tutorial_kids_mode_step1",
        "tutorial_kids_mode_step2",
        "tutorial_kids_mode_step3",
        "tutorial_kids_mode_step4",
      ],
      image: "https://images.unsplash.com/photo-1565116188548-77af528d6d9d?ixlib=rb-1.2.1&auto=format&fit=crop&w=1200&q=80"
    },
    {
      id: "sharing",
      titleKey: "tutorial_sharing_title",
      icon: <Share2 className="h-8 w-8 text-teal-500" />,
      descriptionKey: "tutorial_sharing_desc",
      stepsKeys: [
        "tutorial_sharing_step1",
        "tutorial_sharing_step2",
        "tutorial_sharing_step3",
        "tutorial_sharing_step4"
      ],
      image: "https://images.unsplash.com/photo-1528605248644-14dd04022da1?w=800&auto=format&fit=crop&q=60" // Placeholder for sharing
    },
  ];

  const proTips = [
    { icon: <Save className="h-4 w-4" />, titleKey: "pro_tip_notes_title", descriptionKey: "pro_tip_notes_desc" },
    { icon: <Filter className="h-4 w-4" />, titleKey: "pro_tip_filtering_title", descriptionKey: "pro_tip_filtering_desc" },
    { icon: <Lock className="h-4 w-4" />, titleKey: "pro_tip_kids_security_title", descriptionKey: "pro_tip_kids_security_desc" },
    { icon: <Star className="h-4 w-4" />, titleKey: "pro_tip_favorites_title", descriptionKey: "pro_tip_favorites_desc" },
    { icon: <Bookmark className="h-4 w-4" />, titleKey: "pro_tip_watch_later_title", descriptionKey: "pro_tip_watch_later_desc" },
  ];


  return (
    <div className="container mx-auto py-6 md:py-8">
      <div className="flex items-center gap-3 mb-8">
        <Link to={createPageUrl("Home")} aria-label={t.back_to_home || "Back to Home"}>
          <Button variant="ghost" size="icon" className="rounded-full">
            <ArrowLeft className="h-5 w-5" />
          </Button>
        </Link>
        <h1 className="text-3xl font-bold">{t.tutorial_page_title || "VideoVault Tutorial"}</h1>
      </div>

      <Card className="mb-10 shadow-lg">
        <CardHeader className="bg-gradient-to-r from-blue-500 to-indigo-600 text-white rounded-t-lg">
          <div className="flex items-center gap-4 p-2">
            <Play className="h-10 w-10" />
            <div>
              <CardTitle className="text-2xl">{t.tutorial_welcome_title || "Welcome to VideoVault!"}</CardTitle>
              <p className="opacity-90 text-sm">{t.tutorial_welcome_subtitle || "Learn how to make the most of your video collection."}</p>
            </div>
          </div>
        </CardHeader>
        <CardContent className="p-6">
          <p className="text-lg text-gray-700">
            {t.tutorial_intro_text || "VideoVault helps you collect, organize, and watch your favorite YouTube videos in one place. This tutorial will guide you through the main features of the app. Follow the guides below to get started!"}
          </p>
        </CardContent>
      </Card>

      <div className="space-y-12">
        {tutorials.map((tutorial) => (
          <div key={tutorial.id} id={tutorial.id} className="scroll-mt-20"> {/* scroll-mt for fixed header */}
            <Card className="shadow-lg hover:shadow-xl transition-shadow duration-300">
              <CardHeader className="border-b bg-gray-50 dark:bg-gray-800">
                <div className="flex items-center gap-4">
                  {tutorial.icon}
                  <CardTitle className="text-xl">{t[tutorial.titleKey] || tutorial.titleKey.replace('tutorial_','').replace(/_/g, ' ')}</CardTitle>
                </div>
              </CardHeader>
              <CardContent className="p-6">
                <div className="flex flex-col md:flex-row gap-6 items-start">
                  <div className="md:w-1/2">
                    <p className="text-gray-700 dark:text-gray-300 mb-4">{t[tutorial.descriptionKey]}</p>
                    <ol className="list-decimal list-inside space-y-2 ml-4">
                      {tutorial.stepsKeys.map((stepKey, index) => (
                        <li key={index} className="text-gray-600 dark:text-gray-400">{t[stepKey]}</li>
                      ))}
                    </ol>
                  </div>
                  <div className="md:w-1/2">
                    <img 
                      src={tutorial.image} 
                      alt={t[tutorial.titleKey]} 
                      className="rounded-lg shadow-md w-full h-auto object-cover aspect-video"
                    />
                  </div>
                </div>
              </CardContent>
            </Card>
          </div>
        ))}

        <div id="tips" className="scroll-mt-20">
          <Card className="shadow-lg">
            <CardHeader className="border-b bg-yellow-50 dark:bg-yellow-900/30">
              <div className="flex items-center gap-4">
                <Star className="h-8 w-8 text-yellow-500" />
                <CardTitle className="text-xl">{t.pro_tips_section_title || "Pro Tips"}</CardTitle>
              </div>
            </CardHeader>
            <CardContent className="p-6">
              <div className="grid md:grid-cols-2 gap-x-6 gap-y-4">
                {proTips.map(tip => (
                  <div key={tip.titleKey} className="bg-gray-50 dark:bg-gray-800 p-4 rounded-lg shadow hover:shadow-md transition-shadow">
                    <h3 className="font-semibold mb-1 flex items-center gap-2 text-gray-800 dark:text-gray-100">
                      {tip.icon} {t[tip.titleKey]}
                    </h3>
                    <p className="text-sm text-gray-600 dark:text-gray-400">
                      {t[tip.descriptionKey]}
                    </p>
                  </div>
                ))}
              </div>
            </CardContent>
          </Card>
        </div>
      </div>

      <div className="mt-12 text-center">
        <p className="text-gray-500 dark:text-gray-400 mb-4">{t.tutorial_ready_to_start || "Ready to start using VideoVault?"}</p>
        <Link to={createPageUrl("Home")}>
          <Button size="lg" className="bg-blue-600 hover:bg-blue-700 text-white">
            {t.go_to_my_videos_button || "Go to My Videos"}
          </Button>
        </Link>
      </div>
    </div>
  );
}